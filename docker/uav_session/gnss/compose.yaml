volumes:

  shared_data:

  uav_custom_files:

  bag_files:

services:

  # will copy session-specific data shared between containers from the shared_data container to a shared volume
  copy_shared_data:
    # image: fly4future/robofly:shared_data_vio
    image: fly4future/robofly:shared_data_gnss
    # image: klaxalk:5000/robofly:shared_data_vio
    volumes:
      - shared_data:/etc/ctu-mrs/shared_data:consistent
    command: sh -c "rm -rvf /etc/ctu-mrs/shared_data/*; mkdir -pv /etc/ctu-mrs/shared_data; cp -rv /etc/shared_data/* /etc/ctu-mrs/shared_data/"

  # will copy uav-specific configs, launch files and other files from the uav-specific docker image to a shared volume
  copy_uav_custom_files:
    image: fly4future/uav_custom_files:latest
    volumes:
      - uav_custom_files:/etc/fly4future/uav_custom_files:consistent
    command: sh -c "rm -rvf /etc/fly4future/uav_custom_files/*; mkdir -pv /etc/fly4future/uav_custom_files; cp -rv /etc/uav_custom_files/${UAV_TYPE}/${UAV_ID}/* /etc/fly4future/uav_custom_files/"

  # starts roscore
  # this is the first container in the ROS pipeline
  roscore:
    image: ctumrs/mrs_uav_system:robofly
    network_mode: host
    depends_on:
      - copy_shared_data
      - copy_uav_custom_files
    env_file:
      - ./stack.env
    command: roscore

  # after roscore is started
  # -> set a parameter that tells the system that simulation time is NOT used
  # this container then stops
  rostime:
    image: ctumrs/mrs_uav_system:robofly
    network_mode: host
    depends_on:
      - roscore
    env_file:
      - ./stack.env
    command: bash -c "waitForRos && rosparam set use_sim_time false"

  # starts the HW API for connecting the MRS UAV System to PX4
  hw_api:
    image: ctumrs/mrs_uav_system:robofly
    depends_on:
      - rostime
    network_mode: host
    volumes:
      - shared_data:/etc/ctu-mrs/shared_data:consistent
      - /dev/:/dev/
    privileged: true
    env_file:
      - ./stack.env
    command: bash -c "waitForTime && roslaunch mrs_uav_px4_api api.launch"



  # starts the MRS UAV System's core
  uav_core:
    image: ctumrs/mrs_uav_system:robofly
    depends_on:
      - rostime
    network_mode: host
    volumes:
      - shared_data:/etc/ctu-mrs/shared_data:consistent
    env_file:
      - ./stack.env
    command: bash -c "waitForHw && roslaunch mrs_uav_core core.launch platform_config:=`rospack find mrs_robofly_core`/config/platform_config.yaml custom_config:=/etc/ctu-mrs/shared_data/custom_config.yaml world_config:=/etc/ctu-mrs/shared_data/world_local.yaml network_config:=/etc/ctu-mrs/shared_data/network_config.yaml"

  # starts the camera drivers
  cameras:
    image: ctumrs/mrs_uav_system:robofly
    depends_on:
      - rostime
    network_mode: host
    volumes:
      - shared_data:/etc/ctu-mrs/shared_data:consistent
      - uav_custom_files:/etc/fly4future/uav_custom_files:consistent
    devices:
      - /dev/:/dev/
    privileged: true
    env_file:
      - ./stack.env
    command: bash -c "waitForTime && roslaunch /etc/fly4future/uav_custom_files/launch_files/cameras.launch"

  # starts the node that handles automatic initialization of the system and takeoff
  automatic_start:
    image: ctumrs/mrs_uav_system:robofly
    depends_on:
      - rostime
    network_mode: host
    volumes:
      - shared_data:/etc/ctu-mrs/shared_data:consistent
    env_file:
      - ./stack.env
    command: bash -c "waitForHw && roslaunch mrs_uav_autostart automatic_start.launch"

  # starts `rosbag record`
  rosbag:
    image: ctumrs/mrs_uav_system:robofly
    depends_on:
      - rostime
    network_mode: host
    volumes:
      - bag_files:/etc/bag_files:consistent
      - shared_data:/etc/ctu-mrs/shared_data:consistent
    env_file:
      - ./stack.env
    command: bash -c "waitForTime && /etc/ctu-mrs/shared_data/record.sh"

  # this container can be used to access a terminal with ROS inside the compose session
  terminal:
    image: ctumrs/mrs_uav_system:robofly
    network_mode: host
    depends_on:
      - rostime
    env_file:
      - ./stack.env
    entrypoint: ["/bin/bash", "-c"]
    volumes:
      - bag_files:/etc/bag_files:consistent
      - shared_data:/etc/ctu-mrs/shared_data:consistent
      - uav_custom_files:/etc/fly4future/uav_custom_files:consistent
      - /dev/:/dev/
    command:
      - bash --rcfile /opt/ros/noetic/setup.bash
    privileged: true
    stdin_open: true
    tty: true
